{"version":3,"file":"static/js/719.d560c102.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.jsx","components/errorMessage/ErrorMessage.jsx","components/comicsList/ComicsList.jsx","components/pages/ComicsPage.jsx","services/MarvelService.jsx","hooks/http.hook.jsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources-img/Avengers.png';\nimport avengersLogo from '../../resources-img/Avengers_logo.png';\n\nconst AppBanner = () => {\n\treturn (\n\t\t<div className=\"app__banner\">\n\t\t\t<img src={avengers} alt=\"Avengers\"/>\n\t\t\t<div className=\"app__banner-text\">\n\t\t\t\tNew comics every week!<br/>\n\t\t\t\tStay tuned!\n\t\t\t</div>\n\t\t\t<img src={avengersLogo} alt=\"Avengers logo\"/>\n\t\t</div>\n\t)\n}\n\nexport default AppBanner;","import img from './error.gif';\n\nconst ErrorMessage = () => {\n\treturn (\n\t\t<img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\n\t)\n}\n\nexport default ErrorMessage;","import {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n\n\tconst [comicsList, setComicsList] = useState([]);\n\tconst [newItemLoading, setnewItemLoading] = useState(false);\n\tconst [offset, setOffset] = useState(0);\n\tconst [comicsEnded, setComicsEnded] = useState(false);\n\n\tconst {loading, error, getAllComics} = useMarvelService();\n\n\tuseEffect(() => {\n\t\tonRequest(offset, true);\n\t}, [])\n\n\tconst onRequest = (offset, initial) => {\n\t\tinitial ? setnewItemLoading(false) : setnewItemLoading(true);\n\t\tgetAllComics(offset)\n\t\t\t.then(onComicsListLoaded)\n\t}\n\n\tconst onComicsListLoaded = (newComicsList) => {\n\t\tlet ended = false;\n\t\tif (newComicsList.length < 8) {\n\t\t\tended = true;\n\t\t}\n\t\tsetComicsList([...comicsList, ...newComicsList]);\n\t\tsetnewItemLoading(false);\n\t\tsetOffset(offset + 8);\n\t\tsetComicsEnded(ended);\n\t}\n\n\tfunction renderItems (arr) {\n\t\tconst items = arr.map((item, i) => {\n\t\t\treturn (\n\t\t\t\t<li className=\"comics__item\" key={i}>\n\t\t\t\t\t<Link to={`/comics/${item.id}`}>\n\t\t\t\t\t\t<img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n\t\t\t\t\t\t<div className=\"comics__item-name\">{item.title}</div>\n\t\t\t\t\t\t<div className=\"comics__item-price\">{item.price}</div>\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t)\n\t\t})\n\n\t\treturn (\n\t\t\t<ul className=\"comics__grid\">\n\t\t\t\t{items}\n\t\t\t</ul>\n\t\t)\n\t}\n\n\tconst items = renderItems(comicsList);\n\n\tconst errorMessage = error ? <ErrorMessage/> : null;\n\tconst spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n\treturn (\n\t\t<div className=\"comics__list\">\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{items}\n\t\t\t<button \n\t\t\t\tdisabled={newItemLoading} \n\t\t\t\tstyle={{'display' : comicsEnded ? 'none' : 'block'}}\n\t\t\t\tclassName=\"button button__main button__long\"\n\t\t\t\tonClick={() => onRequest(offset)}>\n\t\t\t\t<div className=\"inner\">load more</div>\n\t\t\t</button>\n\t\t</div>\n\t)\n}\n\nexport default ComicsList;","import ComicsList from \"../comicsList/ComicsList\";\nimport AppBanner from \"../appBanner/AppBanner\";\n\nconst ComicsPage = () => {\n\treturn (\n\t\t<>\n\t\t\t<AppBanner/>\n\t\t\t<ComicsList/>\n\t\t</>\n\t)\n}\n\nexport default ComicsPage;","import {useHttp} from '../hooks/http.hook';\n\nconst useMarvelService = () => {\n\t\n\tconst {loading, request, error, clearError} = useHttp();\n// для работы с API marvel service\t\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n\tconst _apiKey = 'apikey=c35d61692fb992dcf21b1578980b0dd8';\n\tconst _hash = 'hash=03df19b5e0a49caaa13b46ee14dd7988';\n\tconst _baseOffset = 210;\n// получить всех персонажей\n\tconst getAllCharacters = async (offset = _baseOffset) => {\n\t\tconst res = await request(`${_apiBase}characters?limit=9&offset=${offset}&ts=1&${_apiKey}&${_hash}`);\n\t\treturn res.data.results.map(_transformCharacter);\n\t}\n// найти персонажа\t\n\tconst getCharacterByName = async (name) => {\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&ts=1&${_apiKey}&${_hash}`);\n\t\treturn res.data.results.map(_transformCharacter);\n\t}\n//получить персонажей\n\tconst getCharacter = async (id) => {\n\t\tconst res = await request(`${_apiBase}characters/${id}?ts=1&${_apiKey}&${_hash}`);\n\t\treturn _transformCharacter(res.data.results[0]);\n\t}\n// вывести все комикы\t\n\tconst getAllComics = async (offset = 0) => {\n\t\tconst res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&ts=1&${_apiKey}&${_hash}`);\n\t\treturn res.data.results.map(_transformComics);\n\t}\n// вывести комикс\t\n\tconst getComic = async (id) => {\n\t\tconst res = await request(`${_apiBase}comics/${id}?ts=1&${_apiKey}&${_hash}`);\n\t\treturn _transformComics(res.data.results[0]);\n\t}\n// информация о персонажахв\n\tconst _transformCharacter = (char) => {\n\t\treturn {\n\t\t\tid: char.id,\n\t\t\tname: char.name,\n\t\t\tdescription: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n\t\t\thomepage: char.urls[0].url,\n\t\t\twiki: char.urls[1].url,\n\t\t\tcomics: char.comics.items\n\t\t}\n\t}\n// информация о комиксах\n\tconst _transformComics = (comics) => {\n\t\treturn {\n\t\t\tid: comics.id,\n\t\t\ttitle: comics.title,\n\t\t\tdescription: comics.description || 'There is no description',\n\t\t\tpageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\n\t\t\tthumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n\t\t\tlanguage: comics.textObjects.language || 'en-us',\n\t\t\tprice: comics.prices.price ? `${comics.prices.price}$` : 'not available'\n\t\t}\n\t}\n\t\n\treturn {loading, error, clearError, getAllCharacters, getCharacterByName, getCharacter, getAllComics, getComic}\n}\n\nexport default useMarvelService;","import {useState, useCallback} from 'react';\n\nexport const useHttp = () => {\n\t\n\tconst [loading, setLoading] = useState(false);\n\tconst [error, setError] = useState(null);\n\t\n\tconst request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\t\t\n\t\tsetLoading(true);\n\t\t\n\t\ttry {\n\t\t\tconst response = await fetch(url, {method, body, headers});\n\t\t\t\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`);\n\t\t\t}\n\t\t\t\n\t\t\tconst data = await response.json();\n\t\t\t\n\t\t\tsetLoading(false);\n\t\t\treturn data;\n\t\t} catch(e) {\n\t\t\tsetLoading(false);\n\t\t\tsetError(e.message);\n\t\t\tthrow e;\n\t\t}\n\t}, [])\n\t\n\tconst clearError = useCallback(()  => setError(null), []);\n\t\n\treturn {loading, request, error, clearError}\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["className","src","avengers","alt","avengersLogo","style","display","width","height","objectFit","margin","img","useState","comicsList","setComicsList","newItemLoading","setnewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","useMarvelService","loading","error","getAllComics","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","items","arr","map","item","i","to","id","thumbnail","title","price","renderItems","errorMessage","ErrorMessage","spinner","Spinner","disabled","onClick","AppBanner","setLoading","setError","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","_hash","getAllCharacters","res","results","_transformCharacter","getCharacterByName","name","getCharacter","_transformComics","getComic","char","description","slice","path","extension","homepage","urls","wiki","comics","pageCount","language","textObjects","prices","_toConsumableArray","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}